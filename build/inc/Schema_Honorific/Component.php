<?php
/**
 * WpmSchema\Schema_Honorific\Component class
 * Adds the 'Spouse' schema graph piece to the output generated by Yoast SEO.
 *
 * @package wpmschema
 */

namespace WpMunich\wpmschema\Schema_Honorific;
use WpMunich\wpmschema\Component_Interface;
use function add_action;
use function load_plugin_textdomain;
use \YoastSEO;

/**
 * A class to handle textdomains and other i18n related logic..
 */
class Component implements Component_Interface {

	/**
	 * Gets the unique identifier for the plugin component.
	 *
	 * @return string Component slug.
	 */
	public function get_slug() {
		return 'schema_honorific';
	}

	/**
	 * Adds the action and filter hooks to integrate with WordPress.
	 */
	public function initialize() {
		add_action( 'wpm_schema_user_profile', array( $this, 'extend_user_profile' ) );
		add_action( 'wpm_schema_user_update', array( $this, 'update_user_profile' ) );

		add_filter( 'wpseo_schema_person_data', array( $this, 'extend_schema_person_data' ), 10, 2 );
	}

	/**
	 * Extend the existing user profile settings.
	 *
	 * @param WP_User $user The current WP_User object.
	 */
	public function extend_user_profile( $user ) {
		?>
		<tr class="user-description-wrap">
			<th><label for="wpm-honorific-prefix"><?php _e( 'Honorific Prefix', 'wpm-schema' ); ?></label></th>
			<td>
				<input type="text" name="wpm-honorific-prefix" id="wpm-honorific-prefix" value="<?php echo esc_attr( get_user_meta( $user->ID, 'wpm-honorific-prefix', true ) ); ?>">
				<p class="description"><?php _e( 'An honorific prefix preceding a Person\'s name such as Dr/Mrs/Mr.', 'wpm-schema' ); ?></p>
			</td>
		</tr>
		<tr class="user-description-wrap">
			<th><label for="wpm-honorific-suffix"><?php _e( 'Honorific Suffix', 'wpm-schema' ); ?></label></th>
			<td>
				<input type="text" name="wpm-honorific-suffix" id="wpm-honorific-suffix" value="<?php echo esc_attr( get_user_meta( $user->ID, 'wpm-honorific-suffix', true ) ); ?>">
				<p class="description"><?php _e( 'An honorific suffix following a Person\'s name such as M.D. /PhD/MSCSW.', 'wpm-schema' ); ?></p>
			</td>
		</tr>
		<?php
	}

	/**
	 * Update the user meta data.
	 *
	 * @param  int $user_id The user ID.
	 *
	 * @return void
	 */
	public function update_user_profile( $user_id ) {
		if ( isset( $_POST['wpm-honorific-prefix'] ) ) {
			update_user_meta( $user_id, 'wpm-honorific-prefix', $_POST['wpm-honorific-prefix'] );
		}

		if ( isset( $_POST['wpm-honorific-suffix'] ) ) {
			update_user_meta( $user_id, 'wpm-honorific-suffix', $_POST['wpm-honorific-suffix'] );
		}
	}


	/**
	 * Extend the schema markup with honorific data, if it exists.
	 *
	 * @param array $data    The schema data we have for this person.
	 * @param int   $user_id The current user we're collecting schema data for.
	 *
	 * @return array         The schema data we have for this person.
	 */
	public function extend_schema_person_data( $data, $user_id ) {
		if ( ! empty( get_user_meta( $user_id, 'wpm-honorific-prefix', true ) ) ) {
			$data['honorificPrefix'] = get_user_meta( $user_id, 'wpm-honorific-prefix', true );
		}

		if ( ! empty( get_user_meta( $user_id, 'wpm-honorific-suffix', true ) ) ) {
			$data['honorificSuffix'] = get_user_meta( $user_id, 'wpm-honorific-suffix', true );
		}

		return $data;
	}
}
