# This workflow creates a release based upon the information in our wp-boilerplate repositories.
# It assumes that `npm install`, `composer install` and `npx grunt release` are valid commands.
# The action expects a valid zip file in the `./update/` folder and the `slug` key in the
# `package.json` to be set.

name: 🚀 Release to WordPress.org

on:
  # This action is triggered manually.
  workflow_dispatch:
  # This action is triggered automatically on release.
  release:
    types: [published]

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_ADMIN_TOKEN }}

      - name: ⚙️ Configure git
        run: |
          git config user.name $GITHUB_ACTOR
          git config user.email gh-actions-${GITHUB_ACTOR}@github.com

      - uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: ⚙️ Setup PHP with tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer:v2

      - name: ⚙️ Get project slug
        id: package
        run: echo "::set-output name=slug::$(node -p "require('./package.json').slug")"

      - name: ⚙️ Get project version
        id: version
        run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

      - name: 💾 Get node.js cache directory
        id: node-cache-dir
        run: echo "::set-output name=dir::$(npm config get cache)" # Use $(yarn cache dir) for yarn

      - name: 💾 Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.node-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }} # Use '**/yarn.lock' for yarn
          restore-keys: ${{ runner.os }}-node-

      - name: 💾 Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: ⚙️ Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: ⚙️ Install Composer Packages
        run: composer install --prefer-dist

      - name: ⚙️ Install Node Packages
        run: npm install

      - name: 🏗 Build Release
        run: npx grunt release

      - name: Deploy to WordPress.org
        uses: luehrsenheinrich/action-wordpress-plugin-deploy@develop
        env:
          SVN_PASSWORD: ${{ secrets.WPM_SVN_PASSWORD }}
          SVN_USERNAME: ${{ secrets.WPM_SVN_USERNAME }}
          ASSETS_DIR: 'assets'
          PLUGIN_DIR: 'trunk'
          VERSION: ${{ steps.version.outputs.version }}
          SLUG: 'wpm-schema'
